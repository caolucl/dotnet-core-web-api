trigger:
  branches:
    include:
    - refs/heads/main
  #paths:
  # include:
  #   - aspnet-api/*
resources:
  repositories:
  - repository: self
    type: git
    ref: refs/heads/$(Build.SourceBranchName)
variables:

- name: appName
  value : 'aspnet-api'
- name: dockerfilePath
  value : '$(Build.SourcesDirectory)/Dockerfile'
- name: imageName
  value: sample/$(appName)
- name: azure-container-registry
  value: lcaodev1ACR
#- name: system_accesstoken
#  value : $(System.AccessToken)
- name: container-registery-loginname
  value: lcaodev1.azurecr.io

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - checkout: self
      persistCredentials: true
      
    # Install docker
    - task: DockerInstaller@0
      inputs:
        dockerVersion: '17.09.0-ce'
    #  Build and push an image to container registry
    - task: Docker@2
      displayName: Login to ACR
      inputs:
        command: login
        containerRegistry: $(azure-container-registry)

    - task: Docker@2
      displayName: Build an image for $(appName)
      inputs:
        command: build
        buildContext: '$(Build.SourcesDirectory)'
        repository: $(imageName)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(azure-container-registry)
        tags: |
          latest
          $(build.buildNumber)

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          docker export lcaodev1.azurecr.io/sample/aspnet-api:latest -o $(imageName).tar.gz
          docker images
        workingDirectory: '$(Build.ArtifactStagingDirectory)'
    - task: Docker@2
      displayName: Push an image to container registry
      inputs:
        containerRegistry: 'lcaodev1ACR'
        repository: '$(imageName)'
        command: 'push'
        tags: |
          latest
          $(build.buildNumber)

    - powershell: |
        Set-Content -Path "$(Build.ArtifactStagingDirectory)/$(appName)" -Value (docker inspect $(container-registery-loginname)/$(imageName):latest -f '{{ .Id }}')
      displayName: Saving container hashes